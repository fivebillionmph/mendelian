=====current layout=====


window.game_objects = {
  properties: {...},
  menu_objects: {
    seed_pouches: [...],
    plots: [...],
    seed_pouch_builder: {...}
  },
  menu_panels = {...}
};





=====new layout=====


models = {
  data: {
    properties: {...},
    seed_pouches: [...],
    plots: [...],
    seed_pouch_builder: {...}
  },
  observers: [views, controller],
  notifyObservers: function(){...}
};

views = {
  models: models,
  controller: controller,
  view_handler: new ViewHandler(models, controller)
};

controller = {
  models: models,
  views: views,
  variousFunctionsCalledFromViews: function(){...}
};

view
  every view will have functions that listen to the controller and models
  every view will have default onClick, onHover, etc...
view example:
SeedPouchView = function(controller, models){
  this.controller = controller;
  this.models = models;
  this
}


====views nodes classes====

background
	seedpouch panel
		single seed pouch small
			delete (top left corner)
			information (includes stats and note)
	single seed pouch
		delete (bottom)
		close (bottom)
		note
		save (to save changes to note)
		make plot
		details
		image
	plots panel
		single plot small
			delete (top left corner)
			information (includes stats and note)
	slots panel (single plot)
		single slot small
			information (includes stats and note)
		close (go back go plots panel)
	snigle slot panel
		image
		close
		details
		note
		save (to save changes to note)
		add to seed pouch builder
	seedpouch builder panel
		remove organism
		organism slot
		delete (top left corner of each organism when present)
		build seed pouch
	confirmation (a pop up that disables the background when confirming to delete or doing another action)
		yes delete button
		cancel button

====models====

seedpouches
plots
	slots
phenotypes
	rules
		subrules
